name: main workflow

on: 
  push:
    branches:
      - main
      - staging
      - development
  pull_request:
    branches: 
      - main
      - staging
      - development

env:
  GIT_COMMIT: ${{ github.sha }}
  KUBECONFIG: ${{ github.workspace }}/kubeconfig

jobs:
  Build: 
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.12'

      - name: Build backend
        run: |
          cd backend 
          go build .

      - name: Build frontend
        run: |
          cd frontend 
          go build .

      - name: Test frontend
        run: |
          cd frontend 
          go test ./...

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          docker build -t ghcr.io/albla20/backend:latest backend
          docker push ghcr.io/albla20/backend:latest

          docker build -t ghcr.io/albla20/frontend:latest frontend
          docker push ghcr.io/albla20/frontend:latest

      - name: Pull docker images
        run: |
          docker pull ghcr.io/albla20/backend:latest
          docker pull ghcr.io/albla20/frontend:latest

      - name: Set up kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig

      - name: Select environment
        run: |
            if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "ENV=production" >> $GITHUB_ENV
            elif [[ "${GITHUB_REF##*/}" == "staging" ]]; then
            echo "ENV=staging" >> $GITHUB_ENV
            else
            echo "ENV=development" >> $GITHUB_ENV
            fi
            echo "Deploying to $ENV environment"

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/${ENV}/
          kubectl rollout status deployment/backend -n $ENV
          kubectl rollout status deployment/frontend -n $ENV
          
  
